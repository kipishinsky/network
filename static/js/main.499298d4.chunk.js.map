{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Main/post_main/Post_main.module.css","components/Main/post_main/post_block/Post_block.module.css","components/Main/main_info/Main_Info.module.css","components/Header/Header.module.css","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Main/post_main/post_block/like/Like.jsx","components/Main/post_main/post_block/Post_block.jsx","components/Main/post_main/Post_main.jsx","components/Main/main_info/Main_Info.jsx","components/Main/Main.jsx","components/Dialogs/Dialogs.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","s","header","src","alt","Navbar","nav","item","to","activeClassName","active","Like","props","likeblock","kolvolike","Post_block","pstblock","post_main","message","Post_main","postsBlock","name","id","cols","rows","posts","Main_Info","content","descriptionBlock","Main","DialogItem","path","dialog","Message","Dialogs","dialogs","dialogsItems","messages","App","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.499298d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__36z-G\",\"item\":\"Navbar_item__1VENn\",\"active\":\"Navbar_active__NVkZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__SEZeu\",\"dialogsItems\":\"Dialogs_dialogsItems__2B2NT\",\"active\":\"Dialogs_active__4RZNz\",\"messages\":\"Dialogs_messages__2F8mr\",\"message\":\"Dialogs_message__Jg0cp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_main_item__m_ffV\",\"post_main\":\"Post_main_post_main__3uask\",\"postsBlock\":\"Post_main_postsBlock__2fY3S\",\"posts\":\"Post_main_posts__3NN-d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_block_item__2FBt8\",\"post_main\":\"Post_block_post_main__3XjB4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Main_Info_content__3od_Y\",\"descriptionBlock\":\"Main_Info_descriptionBlock__ci49k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__prsWw\"};","import React from \"react\";\nimport s from './Header.module.css'\n\nconst Header = () => {\n\n  return (\n        <header className={s.header}>\n            <img src=\"https://d32dm0rphc51dk.cloudfront.net/AwXYyUz1PC1aFF_05mEDrA/large.jpg\" alt=\"\"/>\n        </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport s from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Navbar = () => {\n\n  return (\n      <nav className={s.nav}>\n          <div className = {s.item}>\n              <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\n          </div>\n          <div className = {`${s.item} ${s.active}`}>\n              <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\n          </div>\n          <div className = {s.item}>\n              <NavLink to=\"/dialogs\" activeClassName={s.active}>Message</NavLink>\n          </div>\n          <div className = {s.item}>\n              <NavLink to=\"/video\" activeClassName={s.active}>Video</NavLink>\n          </div>\n          <div className = {s.item}>\n              <NavLink to=\"/audio\" activeClassName={s.active}>Audio</NavLink>\n          </div>\n          <div className = {s.item}>\n              <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\n          </div>\n      </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport likeblock from './Like.module.css';\n\nconst Like = (props) => {\n\n    return (\n        <div className={likeblock}>\n\n            <div>\n                {props.kolvolike} <span>like</span>\n            </div>\n\n         </div>\n\n     );\n}\n\nexport default Like;\n","import React from \"react\";\nimport pstblock from './Post_block.module.css';\nimport Like from './like/Like'\n\nconst Post_block = (props) => {\n\n    return (\n        <div className={pstblock.post_main}>\n            <div className={pstblock.item}>\n                <div>\n                    <img src=\"https://www.elsetge.cat/myimg/f/31-317081_server-farm-wallpaper-google-server-rooms-usa.jpg\"/>\n                </div>\n\n                <div>\n                    Post 1 <br/>\n                    {props.message}\n                </div>\n\n            </div>\n            <Like kolvolike = {'30 '}/>\n\n         </div>\n\n     );\n}\n\nexport default Post_block;\n","import React from \"react\";\nimport s from './Post_main.module.css';\nimport Post_block from \"./post_block/Post_block\";\n\nconst Post_main = (props) => {\n    return (\n        <div className={s.postsBlock}>\n                <h3>My post</h3>\n                <div>\n                    <div>\n                        <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\">\n\n                        </textarea>\n                    </div>\n                    <div>\n                        <button>\n                            add post\n                        </button>\n                        <button>\n                            remove\n                        </button>\n                    </div>\n                </div>\n                <div className={s.posts}>\n                    <Post_block message = \"Hi, how are you?\"/>\n                    <Post_block message = \"idi nahuy\"/>\n                    <Post_block />\n                </div>\n        </div>\n    )\n}\nexport default Post_main;\n","import React from \"react\";\nimport s from './Main_Info.module.css'\n\nconst Main_Info = () => {\n\n  return (\n      <div>\n          <div className={s.content}>\n                <img src=\"https://futurereport.schibsted.com/wp-content/uploads/2016/10/BIG-BRAIN_2.jpg\"/>\n          </div>\n          <div className={s.descriptionBlock}>\n                ava + dicription\n          </div>\n      </div>\n    );\n}\n\nexport default Main_Info;\n","import React from \"react\";\nimport w from './Main.module.css'\nimport Post_main from './post_main/Post_main'\nimport Main_Info from \"./main_info/Main_Info\";\n\n\nconst Main = () => {\n\n  return (\n      <div>\n          <Main_Info />\n          <Post_main />\n      </div>\n    );\n}\n\nexport default Main;\n","import React from \"react\";\nimport s from './Dialogs.module.css'\nimport {NavLink} from \"react-router-dom\";\n\n\nconst DialogItem = (props) => {\n    let path = '/dialogs/' + props.id;\n    return (\n        <div className={s.dialog + \" \" + s.active}>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    )\n};\n\nconst Message = (props) => {\n    return (\n        <div className={s.message}>{props.message}</div>\n    )\n};\n\nconst Dialogs = (props) => {\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                <DialogItem name=\"Anton\" id=\"1\"/>\n                <DialogItem name=\"Sveta\" id=\"2\"/>\n                <DialogItem name=\"Katya\" id=\"3\"/>\n                <DialogItem name=\"Ira\" id=\"4\"/>\n                <DialogItem name=\"Dima\" id=\"5\"/>\n            </div>\n            <div className={s.messages}>\n                <Message message=\"Hi\"/>\n                <Message message=\"Hiw is your\"/>\n                <Message message=\"YO\"/>\n            </div>\n        </div>\n    )\n}\nexport default Dialogs;\n","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header.jsx\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Main from \"./components/Main/Main\";\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\n\n\nconst App = () => {\n\n  return (\n      <BrowserRouter>\n          <div className={'app-wrapper'}>\n              <Header/>\n              <Navbar/>\n              <div className={'app-wrapper-content'}>\n                  <Route exact path={'/profile'} component={Main}/>\n                  <Route exact path={'/dialogs'} component={Dialogs}/>\n              </div>\n\n          </div>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}